[ { "title": "Mi instalación y configuración de Debian 13", "url": "/posts/mi-instalacion-y-configuracion-debian-13/", "categories": "Instalacion, Debian", "tags": "Debian13, configuracion, instalacion", "date": "2025-10-02 21:17:00 +0200", "content": "Instalación Debian 13 Linux Base + GRUB Zen + Code + SSH Bspwm " }, { "title": "Instalacíon Oracle Database EE (Debian 13)", "url": "/posts/instalacion-oracle/", "categories": "Instalacion, Base de Datos", "tags": "oracle, debian", "date": "2025-10-02 21:17:00 +0200", "content": "Instalación de dependencias Lo primero será instalar los paquetes necesarios para poder instalar y usar el software. sudo apt update sudo apt install rlwrap libaio1t64 libaio-dev unixodbc wget -y Antes para instalar Oracle Database en Debian 12 se necesitaba el paquete libaio1 pero en Debian 13 ese paquete ha cambiado de nombre (libaio1t64). Como Oracle Database busca el fichero /usr/lib/x86_64-linux-gnu/libaio.so.1 pero ese fichero en Debian 13 ahora se llama /usr/lib/x86_64-linux-gnu/libaio.so.1t64 vamos a crear un enlace simbólico del archivo actual que se llame como el antiguo para que Oracle Database lo encuentre. sudo ln -s /usr/lib/x86_64-linux-gnu/libaio.so.1t64 /usr/lib/x86_64-linux-gnu/libaio.so.1 Descarga del archivo .deb e instalación Ahora realizaré la descargar del archivo .deb y la instalación del mismo. wget https://files.diegovargas.es/deb/oracle-database-ee-21c_1.0-2_amd64.deb sudo dpkg -i oracle-database-ee-21c_1.0-2_amd64.deb sudo rm -r oracle-database-ee-21c_1.0-2_amd64.deb Oracle Database no proporciona archivo .deb pero si un archivo .rpm por lo que con ayuda del paquete alien he convertido el archivo .rpm a .deb. Configuraciones necesarias Ya para casi finalizar la instalación del software proporcionaré unos comandos para configurar Oracle Database. echo \"$(hostname -I | awk '{print $1}') $(hostname)\" | sudo tee -a /etc/hosts sudo /etc/init.d/oracledb_ORCLCDB-21c configure sudo usermod -aG dba $USER El primer comando es util ya que Oracle Database a veces necesita resolver el nombre de la máquina con su IP para usar algunas funcionalidades como por ejemplo iniciar el listener. Gracias a eso se puede usar Oracle Database de forma remota. Ahora como última configuración necesaria será asignar los alias para poder usar Oracle Database. echo 'export ORACLE_HOME=/opt/oracle/product/21c/dbhome_1' &gt;&gt; ~/.bashrc echo 'export ORACLE_SID=ORCLCDB' &gt;&gt; ~/.bashrc echo 'export NLS_LANG=SPANISH_SPAIN.AL32UTF8' &gt;&gt; ~/.bashrc echo 'export ORACLE_BASE=/opt/oracle' &gt;&gt; ~/.bashrc echo 'export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH' &gt;&gt; ~/.bashrc echo 'export PATH=$ORACLE_HOME/bin:$PATH' &gt;&gt; ~/.bashrc echo \"alias sqlplus='rlwrap sqlplus'\" &gt;&gt; ~/.bashrc source ~/.bashrc Estos alias se guardan en ~/.bashrc para hacerlos persistentes pero si usas otra shell como por ejemplo zsh en vez de redireccionarlos a (» ~/.bashrc) deberás de redireccionarlo a » ~/.zshrc Configuraciones recomendadas Ahora indicaré información de como usar Oracle Database y alguna configuración útil. Acceso a Oracle como administrador sqlplus / as sysdba Configuración inicial para permitir la creación de usuarios en Oracle STARTUP; ALTER SESSION SET \"_ORACLE_SCRIPT\"=true; Pasos para crear un usuario y asignar permisos Crear usuario: CREATE USER &lt;&lt;user&gt;&gt; IDENTIFIED BY &lt;&lt;password&gt;&gt;; Permisos de todo: GRANT ALL PRIVILEGES TO &lt;&lt;user&gt;&gt;; Pasos para iniciar el servicio automáticamente sudo crontab -e Añadir la línea —&gt; @reboot sudo systemctl restart oracledb_ORCLCDB-21c.service Ejecución de configuración automática Hay algunas configuraciones que se deben de hacer cada vez que se inicia sesión por lo que una solución para evitar eso es crear un archivo ~/.login.sql con una configuración como la siguiente: -- Habilita la salida de mensajes desde procedimientos PL/SQL utilizando DBMS_OUTPUT.PUT_LINE SET SERVEROUTPUT ON -- Establece el ancho de línea para la salida en pantalla, útil para evitar que se divida la información en varias líneas SET LINESIZE 150 -- Establece el número de líneas por página en la salida, para controlar la paginación al mostrar muchos registros SET PAGESIZE 100 Para conseguir ejecutar este fichero es necesario indicarlo al iniciar la sesión sqlplus &lt;&lt;usuario&gt;&gt;/&lt;&lt;contraseña&gt;&gt; @&lt;&lt;ruta_absoluta_.login.sql&gt;&gt; Configuración para conexión remota Ahora voy a explicar como configurar el servidor para que acepte conexiones remotas y un cliente para que se puede conectar. Configuración del lado del servidor Por defecto oracle solamente escucha al localhost por lo que tendremos que modificar el archivo listener.ora para conseguir que escuche todas las peticiones. sudo nano /opt/oracle/homes/OraDBHome21cEE/network/admin/listener.ora Como se ve en la captura se debe cambiar lo que está despues de HOST por 0.0.0.0, esto indica cualquier dirección. También es recomendable modificar el archivo tnsnames.ora ya que este controla cómo el cliente se conecta al servidor. sudo nano /opt/oracle/homes/OraDBHome21cEE/network/admin/tnsnames.ora Como se ve en la captura se debe de cambiar lo mismo que en el archivo listener.ora. Para aplicar los cambios hay más de una forma pero yo lo que haré será reiniciar el servidor. Configuración del lado del cliente Ahora voy a explicar como instalar y configurar el cliente, lo primero será instalar los siguientes paquetes: sudo apt install rlwrap libaio1t64 libaio-dev wget p7zip-full -y Con el paquete libaio1t64 pasa lo mismo que para instalar el servidor oracle, hay que crear el link para que Debian 13 lo encuentre: sudo ln -s /usr/lib/x86_64-linux-gnu/libaio.so.1t64 /usr/lib/x86_64-linux-gnu/libaio.so.1 A continuación pasaré con la instalación del cliente para ello será necesario basic y sqlplus: mkdir ~/oracle cd ~/oracle wget https://download.oracle.com/otn_software/linux/instantclient/2119000/instantclient-basic-linux.x64-21.19.0.0.0dbru.zip wget https://download.oracle.com/otn_software/linux/instantclient/2119000/instantclient-sqlplus-linux.x64-21.19.0.0.0dbru.zip 7z x instantclient-basic-linux.x64-21.19.0.0.0dbru.zip 7z x instantclient-sqlplus-linux.x64-21.19.0.0.0dbru.zip rm -r instantclient-basic-linux.x64-21.19.0.0.0dbru.zip rm -r instantclient-sqlplus-linux.x64-21.19.0.0.0dbru.zip Por último para que el sistema pueda ejecutar los binarios será necesario crear las variables: echo 'export ORACLE_HOME=$HOME/oracle/instantclient_21_19' &gt;&gt; ~/.bashrc echo 'export PATH=$ORACLE_HOME:$PATH' &gt;&gt; ~/.bashrc echo 'export LD_LIBRARY_PATH=$ORACLE_HOME:$LD_LIBRARY_PATH' &gt;&gt; ~/.bashrc echo \"alias sqlplus='rlwrap sqlplus'\" &gt;&gt; ~/.bashrc source ~/.bashrc Por último para poder conectarse remotamente será necesario ejecutar el siguiente comando: sqlplus usuario/password@//IP_DEL_SERVIDOR:1521/ORCLCDB " }, { "title": "Instalacion GNS3 (Debian 13)", "url": "/posts/instalacion-gns3/", "categories": "Instalacion, GNS3", "tags": "GNS3, Debian", "date": "2025-10-02 21:17:00 +0200", "content": "Instalación Wireshark Para instalar Wireshark lo primero será ejecutar el siguiente comando: sudo apt install wireshark -y En el proceso de instalación aparecerá una opción: Debemos pulsar en “Sí”, ya que nos está preguntando si queremos poder usar Wireshark con un usuario sin privilegios de sudo. Para conseguir usar Wireshark sin privilegios sudo, también debemos dar permisos de ejecución para otros al archivo /usr/bin/dumpcap ya que este se encarga de la captura de paquetes y solo lo puede ejecutar el usuario root y los usuario del grupo wireshark, esto lo hacemos con el siguiente comando: sudo chmod +x /usr/bin/dumpcap Instalación GNS3 Para empezar con la descarga de GNS3 lo primero será instalar los paquetes necesarios que este necesita para funcionar, para ello ejecutaré el siguiente comando: sudo apt install python3 python3-pip pipx python3-pyqt5 python3-pyqt5.qtwebsockets python3-pyqt5.qtsvg qemu-kvm qemu-utils libvirt-clients libvirt-daemon-system virtinst ca-certificates curl gnupg2 -y Ahora pasaré a instalar GNS3 pero como no se encuentra en los repositorios de Debian no se puede instalar con apt, para ello usaré pipx que es una herramienta de Python que sirve para instalar aplicaciones. pipx install gns3-server==2.2.52 &amp;&amp; pipx install gns3-gui==2.2.52 &amp;&amp; pipx inject gns3-gui gns3-server PyQt5 Por defecto pipx no incluye en el PATH el directorio donde se encuentran los paquetes instalados a si que se usa el siguiente comando para ello y poder ejecutar GNS3 desde consola: pipx ensurepath A continuación instalaré dos dependencias que no se pueden instalar en Debian 13 desde apt o pipx, por lo que las instalaré desde el repositorio de GitHub de cada una. El primer paquete es vpcs, que es el encargado de simular ordenadores virtuales. git clone https://github.com/GNS3/vpcs.git cd vpcs/src/ bash mk.sh sudo cp vpcs /usr/local/bin/ El segundo es ubridge, que es el que permite crear conexiones entre los dispositivos virtuales. git clone https://github.com/GNS3/ubridge.git cd ubridge/ sudo apt install libpcap-dev -y make sudo make install El tercer paquete es dynamips, que es el encargado de emular routers Cisco, permitiendo correr sus sistemas operativos en entornos virtuales. git clone https://github.com/GNS3/dynamips.git cd dynamips/ sudo apt install cmake gcc libelf-dev libpcap0.8-dev uuid-dev -y mkdir build &amp;&amp; cd build/ cmake .. make sudo make install Si no se puede abrir la terminal del equipo por un error de telnet seguramente sea por no tener instalado telnet, que es lo que me pasó a mi, se instala con el siguiente comando: sudo apt install telnet -y Instalación VMware Ahora voy a instalar GNS3 VM que es una forma muy interesante de usar el simulador GNS3 ya que toda la carga de dispositivos virtualizados recae sobre la máquina virtual que contiene el programa previamente instalado y además puede ser usado por más de un equipo. GNS3 VM es una máquina virtual previamente configurada por la empresa de GNS3 que proporciona el programa a los equipos de la red. Lo primero será tener un programa con el cual poder ejecutar GNS3 VM. En mi caso usare VMware. Después de descargar el archivo de instalación del programa desde la web oficial debemos darle permisos de ejecución. chmod +x VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle A continuación descargamos los paquetes linux-headers de nuestra versión de kernel y los paquetes gcc y make. sudo apt install linux-headers-$(uname -r) gcc make -y Ahora ejecutamos el instalador como un script de bash. sudo bash VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle Y por último ejecutaremos el programa. Este iniciará con el típico instalador al estilo Windows de siguiente. " } ]
